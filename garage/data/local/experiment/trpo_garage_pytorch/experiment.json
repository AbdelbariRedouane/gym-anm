{
  "_snapshotter": {
    "_snapshot_dir": "/Users/robin/Code/gym-anm_exps/garage/data/local/experiment/trpo_garage_pytorch",
    "_snapshot_mode": "last",
    "_snapshot_gap": 1,
    "$type": "garage.experiment.snapshotter.Snapshotter"
  },
  "_has_setup": true,
  "_plot": false,
  "_seed": 1,
  "_train_args": {
    "n_epochs": 999,
    "batch_size": 1024,
    "plot": false,
    "store_episodes": false,
    "pause_for_plot": false,
    "start_epoch": 0,
    "$type": "garage.trainer.TrainArgs"
  },
  "_stats": {
    "total_epoch": 0,
    "total_itr": 0,
    "total_env_steps": 0,
    "last_episode": "None",
    "$type": "garage.trainer.ExperimentStats"
  },
  "_algo": {
    "_discount": 0.99,
    "policy": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "_module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {
            "min_std_param": {
              "$type": "torch.Tensor"
            }
          },
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 4.0,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 2,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 2,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 4.0,
          "_hidden_sizes": [
            32,
            32
          ],
          "_action_dim": 2,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": 1e-06,
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": {
            "$type": "torch.Tensor"
          },
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_env_spec": {
        "max_episode_length": 500,
        "input_space": {
          "n": 2,
          "shape": [],
          "dtype": "dtype('int64')",
          "np_random": "RandomState(MT19937) at 0x7FE718F05490",
          "$type": "akro.discrete.Discrete"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "shape": [
            4
          ],
          "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
          "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_name": "GaussianMLPPolicy",
      "_obs_dim": 4.0,
      "_action_dim": 2,
      "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
    },
    "max_episode_length": 500,
    "_value_function": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 4.0,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 1,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 1,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 4.0,
          "_hidden_sizes": [
            32,
            32
          ],
          "_action_dim": 1,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": "None",
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": "None",
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_mdp_spec": {
        "max_episode_length": 500,
        "input_space": {
          "n": 2,
          "shape": [],
          "dtype": "dtype('int64')",
          "np_random": "RandomState(MT19937) at 0x7FE718F05490",
          "$type": "akro.discrete.Discrete"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "shape": [
            4
          ],
          "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
          "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "name": "GaussianMLPValueFunction",
      "$type": "garage.torch.value_functions.gaussian_mlp_value_function.GaussianMLPValueFunction"
    },
    "_gae_lambda": 0.97,
    "_center_adv": true,
    "_positive_adv": false,
    "_policy_ent_coeff": 0.0,
    "_use_softplus_entropy": false,
    "_stop_entropy_gradient": false,
    "_entropy_method": "no_entropy",
    "_n_samples": 1,
    "_env_spec": {
      "max_episode_length": 500,
      "input_space": {
        "n": 2,
        "shape": [],
        "dtype": "dtype('int64')",
        "np_random": "RandomState(MT19937) at 0x7FE718F05490",
        "$type": "akro.discrete.Discrete"
      },
      "output_space": {
        "dtype": "dtype('float32')",
        "shape": [
          4
        ],
        "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
        "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
        "bounded_below": "array([ True,  True,  True,  True])",
        "bounded_above": "array([ True,  True,  True,  True])",
        "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
        "$type": "akro.box.Box"
      },
      "$type": "garage._environment.EnvSpec"
    },
    "_maximum_entropy": false,
    "_entropy_regularzied": false,
    "_episode_reward_mean": [],
    "_sampler": {
      "_factory": {
        "n_workers": 2,
        "_seed": "None",
        "_max_episode_length": 500,
        "_worker_class": {
          "$typename": "garage.sampler.default_worker.DefaultWorker"
        },
        "_worker_args": {},
        "$type": "garage.sampler.worker_factory.WorkerFactory"
      },
      "_agents": [
        {
          "training": true,
          "_parameters": {},
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_module": {
              "training": true,
              "_parameters": {
                "_init_std": {
                  "$type": "torch.nn.parameter.Parameter"
                }
              },
              "_buffers": {
                "min_std_param": {
                  "$type": "torch.Tensor"
                }
              },
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_mean_module": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 4.0,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        },
                        "1": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    },
                    "_output_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 2,
                              "$type": "torch.nn.modules.linear.Linear"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    }
                  },
                  "_output_dim": 2,
                  "$type": "garage.torch.modules.mlp_module.MLPModule"
                }
              },
              "_input_dim": 4.0,
              "_hidden_sizes": [
                32,
                32
              ],
              "_action_dim": 2,
              "_learn_std": true,
              "_std_hidden_sizes": [
                32,
                32
              ],
              "_min_std": 1e-06,
              "_max_std": "None",
              "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_std_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_std_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_std_output_nonlinearity": "None",
              "_std_output_w_init": {
                "$type": "builtins.function"
              },
              "_std_parameterization": "exp",
              "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_output_nonlinearity": "None",
              "_output_w_init": {
                "$type": "builtins.function"
              },
              "_output_b_init": {
                "$type": "builtins.function"
              },
              "_layer_normalization": false,
              "_norm_dist_class": {
                "$typename": "torch.distributions.normal.Normal"
              },
              "_min_std_param": {
                "$type": "torch.Tensor"
              },
              "_max_std_param": "None",
              "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
            }
          },
          "_env_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718F05490",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_name": "GaussianMLPPolicy",
          "_obs_dim": 4.0,
          "_action_dim": 2,
          "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
        },
        {
          "training": true,
          "_parameters": {},
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_module": {
              "training": true,
              "_parameters": {
                "_init_std": {
                  "$type": "torch.nn.parameter.Parameter"
                }
              },
              "_buffers": {
                "min_std_param": {
                  "$type": "torch.Tensor"
                }
              },
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_mean_module": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 4.0,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        },
                        "1": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    },
                    "_output_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 2,
                              "$type": "torch.nn.modules.linear.Linear"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    }
                  },
                  "_output_dim": 2,
                  "$type": "garage.torch.modules.mlp_module.MLPModule"
                }
              },
              "_input_dim": 4.0,
              "_hidden_sizes": [
                32,
                32
              ],
              "_action_dim": 2,
              "_learn_std": true,
              "_std_hidden_sizes": [
                32,
                32
              ],
              "_min_std": 1e-06,
              "_max_std": "None",
              "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_std_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_std_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_std_output_nonlinearity": "None",
              "_std_output_w_init": {
                "$type": "builtins.function"
              },
              "_std_parameterization": "exp",
              "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_output_nonlinearity": "None",
              "_output_w_init": {
                "$type": "builtins.function"
              },
              "_output_b_init": {
                "$type": "builtins.function"
              },
              "_layer_normalization": false,
              "_norm_dist_class": {
                "$typename": "torch.distributions.normal.Normal"
              },
              "_min_std_param": {
                "$type": "torch.Tensor"
              },
              "_max_std_param": "None",
              "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
            }
          },
          "_env_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718F05490",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_name": "GaussianMLPPolicy",
          "_obs_dim": 4.0,
          "_action_dim": 2,
          "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
        }
      ],
      "_envs": [
        {
          "_env": {
            "_env": {
              "env": {
                "gravity": 9.8,
                "masscart": 1.0,
                "masspole": 0.1,
                "total_mass": 1.1,
                "length": 0.5,
                "polemass_length": 0.05,
                "force_mag": 10.0,
                "tau": 0.02,
                "kinematics_integrator": "euler",
                "theta_threshold_radians": 0.20943951023931953,
                "x_threshold": 2.4,
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                  "$type": "gym.spaces.box.Box"
                },
                "np_random": "RandomState(MT19937) at 0x7FE718F05E20",
                "viewer": "None",
                "state": "None",
                "steps_beyond_done": "None",
                "spec": {
                  "id": "CartPole-v1",
                  "entry_point": "gym.envs.classic_control:CartPoleEnv",
                  "reward_threshold": 475.0,
                  "nondeterministic": false,
                  "max_episode_steps": 500,
                  "_kwargs": {},
                  "_env_name": "CartPole",
                  "$type": "gym.envs.registration.EnvSpec"
                },
                "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
              },
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                "$type": "gym.spaces.box.Box"
              },
              "reward_range": [
                -Infinity,
                Infinity
              ],
              "metadata": {
                "render.modes": [
                  "human",
                  "rgb_array"
                ],
                "video.frames_per_second": 50
              },
              "_max_episode_steps": 500,
              "_elapsed_steps": "None",
              "$type": "gym.wrappers.time_limit.TimeLimit"
            },
            "_max_episode_length": 500,
            "_render_modes": [
              "human",
              "rgb_array"
            ],
            "_step_cnt": "None",
            "_visualize": false,
            "_action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
              "$type": "akro.discrete.Discrete"
            },
            "_observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_env_info": "None",
            "$type": "garage.envs.gym_env.GymEnv"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        },
        {
          "_env": {
            "_env": {
              "env": {
                "gravity": 9.8,
                "masscart": 1.0,
                "masspole": 0.1,
                "total_mass": 1.1,
                "length": 0.5,
                "polemass_length": 0.05,
                "force_mag": 10.0,
                "tau": 0.02,
                "kinematics_integrator": "euler",
                "theta_threshold_radians": 0.20943951023931953,
                "x_threshold": 2.4,
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                  "$type": "gym.spaces.box.Box"
                },
                "np_random": "RandomState(MT19937) at 0x7FE718FE3490",
                "viewer": "None",
                "state": "None",
                "steps_beyond_done": "None",
                "spec": {
                  "id": "CartPole-v1",
                  "entry_point": "gym.envs.classic_control:CartPoleEnv",
                  "reward_threshold": 475.0,
                  "nondeterministic": false,
                  "max_episode_steps": 500,
                  "_kwargs": {},
                  "_env_name": "CartPole",
                  "$type": "gym.envs.registration.EnvSpec"
                },
                "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
              },
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                "$type": "gym.spaces.box.Box"
              },
              "reward_range": [
                -Infinity,
                Infinity
              ],
              "metadata": {
                "render.modes": [
                  "human",
                  "rgb_array"
                ],
                "video.frames_per_second": 50
              },
              "_max_episode_steps": 500,
              "_elapsed_steps": "None",
              "$type": "gym.wrappers.time_limit.TimeLimit"
            },
            "_max_episode_length": 500,
            "_render_modes": [
              "human",
              "rgb_array"
            ],
            "_step_cnt": "None",
            "_visualize": false,
            "_action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
              "$type": "akro.discrete.Discrete"
            },
            "_observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_env_info": "None",
            "$type": "garage.envs.gym_env.GymEnv"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        }
      ],
      "_workers": [
        {
          "_seed": "None",
          "_max_episode_length": 500,
          "_worker_number": 0,
          "agent": {
            "training": true,
            "_parameters": {},
            "_buffers": {},
            "_non_persistent_buffers_set": [],
            "_backward_hooks": {},
            "_forward_hooks": {},
            "_forward_pre_hooks": {},
            "_state_dict_hooks": {},
            "_load_state_dict_pre_hooks": {},
            "_modules": {
              "_module": {
                "training": true,
                "_parameters": {
                  "_init_std": {
                    "$type": "torch.nn.parameter.Parameter"
                  }
                },
                "_buffers": {
                  "min_std_param": {
                    "$type": "torch.Tensor"
                  }
                },
                "_non_persistent_buffers_set": [],
                "_backward_hooks": {},
                "_forward_hooks": {},
                "_forward_pre_hooks": {},
                "_state_dict_hooks": {},
                "_load_state_dict_pre_hooks": {},
                "_modules": {
                  "_mean_module": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "_layers": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "0": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 4.0,
                                "out_features": 32,
                                "$type": "torch.nn.modules.linear.Linear"
                              },
                              "non_linearity": {
                                "training": true,
                                "_parameters": {},
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "module": "<built-in method tanh of type object at 0x102a365b0>",
                                "$type": "garage.torch._functions.NonLinearity"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          },
                          "1": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 32,
                                "out_features": 32,
                                "$type": "torch.nn.modules.linear.Linear"
                              },
                              "non_linearity": {
                                "training": true,
                                "_parameters": {},
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "module": "<built-in method tanh of type object at 0x102a365b0>",
                                "$type": "garage.torch._functions.NonLinearity"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          }
                        },
                        "$type": "torch.nn.modules.container.ModuleList"
                      },
                      "_output_layers": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "0": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 32,
                                "out_features": 2,
                                "$type": "torch.nn.modules.linear.Linear"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          }
                        },
                        "$type": "torch.nn.modules.container.ModuleList"
                      }
                    },
                    "_output_dim": 2,
                    "$type": "garage.torch.modules.mlp_module.MLPModule"
                  }
                },
                "_input_dim": 4.0,
                "_hidden_sizes": [
                  32,
                  32
                ],
                "_action_dim": 2,
                "_learn_std": true,
                "_std_hidden_sizes": [
                  32,
                  32
                ],
                "_min_std": 1e-06,
                "_max_std": "None",
                "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
                "_std_hidden_w_init": {
                  "$type": "builtins.function"
                },
                "_std_hidden_b_init": {
                  "$type": "builtins.function"
                },
                "_std_output_nonlinearity": "None",
                "_std_output_w_init": {
                  "$type": "builtins.function"
                },
                "_std_parameterization": "exp",
                "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
                "_hidden_w_init": {
                  "$type": "builtins.function"
                },
                "_hidden_b_init": {
                  "$type": "builtins.function"
                },
                "_output_nonlinearity": "None",
                "_output_w_init": {
                  "$type": "builtins.function"
                },
                "_output_b_init": {
                  "$type": "builtins.function"
                },
                "_layer_normalization": false,
                "_norm_dist_class": {
                  "$typename": "torch.distributions.normal.Normal"
                },
                "_min_std_param": {
                  "$type": "torch.Tensor"
                },
                "_max_std_param": "None",
                "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
              }
            },
            "_env_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718F05490",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_name": "GaussianMLPPolicy",
            "_obs_dim": 4.0,
            "_action_dim": 2,
            "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
          },
          "env": {
            "_env": {
              "_env": {
                "env": {
                  "gravity": 9.8,
                  "masscart": 1.0,
                  "masspole": 0.1,
                  "total_mass": 1.1,
                  "length": 0.5,
                  "polemass_length": 0.05,
                  "force_mag": 10.0,
                  "tau": 0.02,
                  "kinematics_integrator": "euler",
                  "theta_threshold_radians": 0.20943951023931953,
                  "x_threshold": 2.4,
                  "action_space": {
                    "n": 2,
                    "shape": [],
                    "dtype": "dtype('int64')",
                    "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                    "$type": "gym.spaces.discrete.Discrete"
                  },
                  "observation_space": {
                    "dtype": "dtype('float32')",
                    "shape": [
                      4
                    ],
                    "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                    "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                    "$type": "gym.spaces.box.Box"
                  },
                  "np_random": "RandomState(MT19937) at 0x7FE718F05E20",
                  "viewer": "None",
                  "state": "None",
                  "steps_beyond_done": "None",
                  "spec": {
                    "id": "CartPole-v1",
                    "entry_point": "gym.envs.classic_control:CartPoleEnv",
                    "reward_threshold": 475.0,
                    "nondeterministic": false,
                    "max_episode_steps": 500,
                    "_kwargs": {},
                    "_env_name": "CartPole",
                    "$type": "gym.envs.registration.EnvSpec"
                  },
                  "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
                },
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                  "$type": "gym.spaces.box.Box"
                },
                "reward_range": [
                  -Infinity,
                  Infinity
                ],
                "metadata": {
                  "render.modes": [
                    "human",
                    "rgb_array"
                  ],
                  "video.frames_per_second": 50
                },
                "_max_episode_steps": 500,
                "_elapsed_steps": "None",
                "$type": "gym.wrappers.time_limit.TimeLimit"
              },
              "_max_episode_length": 500,
              "_render_modes": [
                "human",
                "rgb_array"
              ],
              "_step_cnt": "None",
              "_visualize": false,
              "_action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
                "$type": "akro.discrete.Discrete"
              },
              "_observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
                  "$type": "akro.discrete.Discrete"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "_env_info": "None",
              "$type": "garage.envs.gym_env.GymEnv"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          "_env_steps": [],
          "_observations": [],
          "_last_observations": [],
          "_agent_infos": {},
          "_lengths": [],
          "_prev_obs": "None",
          "_eps_length": 0,
          "_episode_infos": {},
          "$type": "garage.sampler.default_worker.DefaultWorker"
        },
        {
          "_seed": "None",
          "_max_episode_length": 500,
          "_worker_number": 1,
          "agent": {
            "training": true,
            "_parameters": {},
            "_buffers": {},
            "_non_persistent_buffers_set": [],
            "_backward_hooks": {},
            "_forward_hooks": {},
            "_forward_pre_hooks": {},
            "_state_dict_hooks": {},
            "_load_state_dict_pre_hooks": {},
            "_modules": {
              "_module": {
                "training": true,
                "_parameters": {
                  "_init_std": {
                    "$type": "torch.nn.parameter.Parameter"
                  }
                },
                "_buffers": {
                  "min_std_param": {
                    "$type": "torch.Tensor"
                  }
                },
                "_non_persistent_buffers_set": [],
                "_backward_hooks": {},
                "_forward_hooks": {},
                "_forward_pre_hooks": {},
                "_state_dict_hooks": {},
                "_load_state_dict_pre_hooks": {},
                "_modules": {
                  "_mean_module": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "_layers": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "0": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 4.0,
                                "out_features": 32,
                                "$type": "torch.nn.modules.linear.Linear"
                              },
                              "non_linearity": {
                                "training": true,
                                "_parameters": {},
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "module": "<built-in method tanh of type object at 0x102a365b0>",
                                "$type": "garage.torch._functions.NonLinearity"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          },
                          "1": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 32,
                                "out_features": 32,
                                "$type": "torch.nn.modules.linear.Linear"
                              },
                              "non_linearity": {
                                "training": true,
                                "_parameters": {},
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "module": "<built-in method tanh of type object at 0x102a365b0>",
                                "$type": "garage.torch._functions.NonLinearity"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          }
                        },
                        "$type": "torch.nn.modules.container.ModuleList"
                      },
                      "_output_layers": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "0": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {
                              "linear": {
                                "training": true,
                                "_parameters": {
                                  "weight": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  },
                                  "bias": {
                                    "$type": "torch.nn.parameter.Parameter"
                                  }
                                },
                                "_buffers": {},
                                "_non_persistent_buffers_set": [],
                                "_backward_hooks": {},
                                "_forward_hooks": {},
                                "_forward_pre_hooks": {},
                                "_state_dict_hooks": {},
                                "_load_state_dict_pre_hooks": {},
                                "_modules": {},
                                "in_features": 32,
                                "out_features": 2,
                                "$type": "torch.nn.modules.linear.Linear"
                              }
                            },
                            "$type": "torch.nn.modules.container.Sequential"
                          }
                        },
                        "$type": "torch.nn.modules.container.ModuleList"
                      }
                    },
                    "_output_dim": 2,
                    "$type": "garage.torch.modules.mlp_module.MLPModule"
                  }
                },
                "_input_dim": 4.0,
                "_hidden_sizes": [
                  32,
                  32
                ],
                "_action_dim": 2,
                "_learn_std": true,
                "_std_hidden_sizes": [
                  32,
                  32
                ],
                "_min_std": 1e-06,
                "_max_std": "None",
                "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
                "_std_hidden_w_init": {
                  "$type": "builtins.function"
                },
                "_std_hidden_b_init": {
                  "$type": "builtins.function"
                },
                "_std_output_nonlinearity": "None",
                "_std_output_w_init": {
                  "$type": "builtins.function"
                },
                "_std_parameterization": "exp",
                "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
                "_hidden_w_init": {
                  "$type": "builtins.function"
                },
                "_hidden_b_init": {
                  "$type": "builtins.function"
                },
                "_output_nonlinearity": "None",
                "_output_w_init": {
                  "$type": "builtins.function"
                },
                "_output_b_init": {
                  "$type": "builtins.function"
                },
                "_layer_normalization": false,
                "_norm_dist_class": {
                  "$typename": "torch.distributions.normal.Normal"
                },
                "_min_std_param": {
                  "$type": "torch.Tensor"
                },
                "_max_std_param": "None",
                "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
              }
            },
            "_env_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718F05490",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_name": "GaussianMLPPolicy",
            "_obs_dim": 4.0,
            "_action_dim": 2,
            "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
          },
          "env": {
            "_env": {
              "_env": {
                "env": {
                  "gravity": 9.8,
                  "masscart": 1.0,
                  "masspole": 0.1,
                  "total_mass": 1.1,
                  "length": 0.5,
                  "polemass_length": 0.05,
                  "force_mag": 10.0,
                  "tau": 0.02,
                  "kinematics_integrator": "euler",
                  "theta_threshold_radians": 0.20943951023931953,
                  "x_threshold": 2.4,
                  "action_space": {
                    "n": 2,
                    "shape": [],
                    "dtype": "dtype('int64')",
                    "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                    "$type": "gym.spaces.discrete.Discrete"
                  },
                  "observation_space": {
                    "dtype": "dtype('float32')",
                    "shape": [
                      4
                    ],
                    "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                    "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                    "bounded_below": "array([ True,  True,  True,  True])",
                    "bounded_above": "array([ True,  True,  True,  True])",
                    "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                    "$type": "gym.spaces.box.Box"
                  },
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3490",
                  "viewer": "None",
                  "state": "None",
                  "steps_beyond_done": "None",
                  "spec": {
                    "id": "CartPole-v1",
                    "entry_point": "gym.envs.classic_control:CartPoleEnv",
                    "reward_threshold": 475.0,
                    "nondeterministic": false,
                    "max_episode_steps": 500,
                    "_kwargs": {},
                    "_env_name": "CartPole",
                    "$type": "gym.envs.registration.EnvSpec"
                  },
                  "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
                },
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                  "$type": "gym.spaces.box.Box"
                },
                "reward_range": [
                  -Infinity,
                  Infinity
                ],
                "metadata": {
                  "render.modes": [
                    "human",
                    "rgb_array"
                  ],
                  "video.frames_per_second": 50
                },
                "_max_episode_steps": 500,
                "_elapsed_steps": "None",
                "$type": "gym.wrappers.time_limit.TimeLimit"
              },
              "_max_episode_length": 500,
              "_render_modes": [
                "human",
                "rgb_array"
              ],
              "_step_cnt": "None",
              "_visualize": false,
              "_action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
                "$type": "akro.discrete.Discrete"
              },
              "_observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
                "$type": "akro.box.Box"
              },
              "_spec": {
                "max_episode_length": 500,
                "input_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
                  "$type": "akro.discrete.Discrete"
                },
                "output_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
                  "$type": "akro.box.Box"
                },
                "$type": "garage._environment.EnvSpec"
              },
              "_env_info": "None",
              "$type": "garage.envs.gym_env.GymEnv"
            },
            "_scale_reward": 1.0,
            "_normalize_obs": false,
            "_normalize_reward": false,
            "_expected_action_scale": 1.0,
            "_flatten_obs": true,
            "_obs_alpha": 0.001,
            "_obs_mean": "array([0., 0., 0., 0.])",
            "_obs_var": "array([1., 1., 1., 1.])",
            "_reward_alpha": 0.001,
            "_reward_mean": 0.0,
            "_reward_var": 1.0,
            "$type": "garage.envs.normalized_env.NormalizedEnv"
          },
          "_env_steps": [],
          "_observations": [],
          "_last_observations": [],
          "_agent_infos": {},
          "_lengths": [],
          "_prev_obs": "None",
          "_eps_length": 0,
          "_episode_infos": {},
          "$type": "garage.sampler.default_worker.DefaultWorker"
        }
      ],
      "total_env_steps": 0,
      "$type": "garage.sampler.local_sampler.LocalSampler"
    },
    "_policy_optimizer": {
      "_optimizer": {
        "defaults": {},
        "_max_constraint_value": 0.01,
        "_cg_iters": 10,
        "_max_backtracks": 15,
        "_backtrack_ratio": 0.8,
        "_hvp_reg_coeff": 1e-05,
        "_accept_violation": false,
        "param_groups": [
          {
            "params": [
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              }
            ]
          }
        ],
        "$type": "garage.torch.optimizers.conjugate_gradient_optimizer.ConjugateGradientOptimizer"
      },
      "_max_optimization_epochs": 1,
      "_minibatch_size": "None",
      "$type": "garage.torch.optimizers.optimizer_wrapper.OptimizerWrapper"
    },
    "_vf_optimizer": {
      "_optimizer": {
        "defaults": {
          "lr": 0.00025,
          "betas": [
            0.9,
            0.999
          ],
          "eps": 1e-08,
          "weight_decay": 0,
          "amsgrad": false
        },
        "state": {},
        "param_groups": [
          {
            "params": [
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              },
              {
                "$type": "torch.nn.parameter.Parameter"
              }
            ],
            "lr": 0.00025,
            "betas": [
              0.9,
              0.999
            ],
            "eps": 1e-08,
            "weight_decay": 0,
            "amsgrad": false
          }
        ],
        "$type": "torch.optim.adam.Adam"
      },
      "_max_optimization_epochs": 10,
      "_minibatch_size": 64,
      "$type": "garage.torch.optimizers.optimizer_wrapper.OptimizerWrapper"
    },
    "_old_policy": {
      "training": true,
      "_parameters": {},
      "_buffers": {},
      "_non_persistent_buffers_set": [],
      "_backward_hooks": {},
      "_forward_hooks": {},
      "_forward_pre_hooks": {},
      "_state_dict_hooks": {},
      "_load_state_dict_pre_hooks": {},
      "_modules": {
        "_module": {
          "training": true,
          "_parameters": {
            "_init_std": {
              "$type": "torch.nn.parameter.Parameter"
            }
          },
          "_buffers": {
            "min_std_param": {
              "$type": "torch.Tensor"
            }
          },
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_mean_module": {
              "training": true,
              "_parameters": {},
              "_buffers": {},
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 4.0,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    },
                    "1": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 32,
                          "$type": "torch.nn.modules.linear.Linear"
                        },
                        "non_linearity": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "module": "<built-in method tanh of type object at 0x102a365b0>",
                          "$type": "garage.torch._functions.NonLinearity"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                },
                "_output_layers": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "0": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "linear": {
                          "training": true,
                          "_parameters": {
                            "weight": {
                              "$type": "torch.nn.parameter.Parameter"
                            },
                            "bias": {
                              "$type": "torch.nn.parameter.Parameter"
                            }
                          },
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {},
                          "in_features": 32,
                          "out_features": 2,
                          "$type": "torch.nn.modules.linear.Linear"
                        }
                      },
                      "$type": "torch.nn.modules.container.Sequential"
                    }
                  },
                  "$type": "torch.nn.modules.container.ModuleList"
                }
              },
              "_output_dim": 2,
              "$type": "garage.torch.modules.mlp_module.MLPModule"
            }
          },
          "_input_dim": 4.0,
          "_hidden_sizes": [
            32,
            32
          ],
          "_action_dim": 2,
          "_learn_std": true,
          "_std_hidden_sizes": [
            32,
            32
          ],
          "_min_std": 1e-06,
          "_max_std": "None",
          "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_std_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_std_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_std_output_nonlinearity": "None",
          "_std_output_w_init": {
            "$type": "builtins.function"
          },
          "_std_parameterization": "exp",
          "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
          "_hidden_w_init": {
            "$type": "builtins.function"
          },
          "_hidden_b_init": {
            "$type": "builtins.function"
          },
          "_output_nonlinearity": "None",
          "_output_w_init": {
            "$type": "builtins.function"
          },
          "_output_b_init": {
            "$type": "builtins.function"
          },
          "_layer_normalization": false,
          "_norm_dist_class": {
            "$typename": "torch.distributions.normal.Normal"
          },
          "_min_std_param": {
            "$type": "torch.Tensor"
          },
          "_max_std_param": "None",
          "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
        }
      },
      "_env_spec": {
        "max_episode_length": 500,
        "input_space": {
          "n": 2,
          "shape": [],
          "dtype": "dtype('int64')",
          "np_random": "RandomState(MT19937) at 0x7FE718F056B0",
          "$type": "akro.discrete.Discrete"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "shape": [
            4
          ],
          "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
          "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "np_random": "RandomState(MT19937) at 0x7FE718F057C0",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_name": "GaussianMLPPolicy",
      "_obs_dim": 4.0,
      "_action_dim": 2,
      "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
    },
    "$type": "garage.torch.algos.trpo.TRPO"
  },
  "_env": {
    "_env": {
      "_env": {
        "env": {
          "gravity": 9.8,
          "masscart": 1.0,
          "masspole": 0.1,
          "total_mass": 1.1,
          "length": 0.5,
          "polemass_length": 0.05,
          "force_mag": 10.0,
          "tau": 0.02,
          "kinematics_integrator": "euler",
          "theta_threshold_radians": 0.20943951023931953,
          "x_threshold": 2.4,
          "action_space": {
            "n": 2,
            "shape": [],
            "dtype": "dtype('int64')",
            "np_random": "RandomState(MT19937) at 0x7FE718D83D10",
            "$type": "gym.spaces.discrete.Discrete"
          },
          "observation_space": {
            "dtype": "dtype('float32')",
            "shape": [
              4
            ],
            "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
            "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "np_random": "RandomState(MT19937) at 0x7FE718D83E20",
            "$type": "gym.spaces.box.Box"
          },
          "np_random": "RandomState(MT19937) at 0x7FE718F05050",
          "viewer": "None",
          "state": "None",
          "steps_beyond_done": "None",
          "spec": {
            "id": "CartPole-v1",
            "entry_point": "gym.envs.classic_control:CartPoleEnv",
            "reward_threshold": 475.0,
            "nondeterministic": false,
            "max_episode_steps": 500,
            "_kwargs": {},
            "_env_name": "CartPole",
            "$type": "gym.envs.registration.EnvSpec"
          },
          "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
        },
        "action_space": {
          "n": 2,
          "shape": [],
          "dtype": "dtype('int64')",
          "np_random": "RandomState(MT19937) at 0x7FE718D83D10",
          "$type": "gym.spaces.discrete.Discrete"
        },
        "observation_space": {
          "dtype": "dtype('float32')",
          "shape": [
            4
          ],
          "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
          "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "np_random": "RandomState(MT19937) at 0x7FE718D83E20",
          "$type": "gym.spaces.box.Box"
        },
        "reward_range": [
          -Infinity,
          Infinity
        ],
        "metadata": {
          "render.modes": [
            "human",
            "rgb_array"
          ],
          "video.frames_per_second": 50
        },
        "_max_episode_steps": 500,
        "_elapsed_steps": "None",
        "$type": "gym.wrappers.time_limit.TimeLimit"
      },
      "_max_episode_length": 500,
      "_render_modes": [
        "human",
        "rgb_array"
      ],
      "_step_cnt": "None",
      "_visualize": false,
      "_action_space": {
        "n": 2,
        "shape": [],
        "dtype": "dtype('int64')",
        "np_random": "RandomState(MT19937) at 0x7FE718F05490",
        "$type": "akro.discrete.Discrete"
      },
      "_observation_space": {
        "dtype": "dtype('float32')",
        "shape": [
          4
        ],
        "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
        "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
        "bounded_below": "array([ True,  True,  True,  True])",
        "bounded_above": "array([ True,  True,  True,  True])",
        "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
        "$type": "akro.box.Box"
      },
      "_spec": {
        "max_episode_length": 500,
        "input_space": {
          "n": 2,
          "shape": [],
          "dtype": "dtype('int64')",
          "np_random": "RandomState(MT19937) at 0x7FE718F05490",
          "$type": "akro.discrete.Discrete"
        },
        "output_space": {
          "dtype": "dtype('float32')",
          "shape": [
            4
          ],
          "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
          "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
          "bounded_below": "array([ True,  True,  True,  True])",
          "bounded_above": "array([ True,  True,  True,  True])",
          "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
          "$type": "akro.box.Box"
        },
        "$type": "garage._environment.EnvSpec"
      },
      "_env_info": "None",
      "$type": "garage.envs.gym_env.GymEnv"
    },
    "_scale_reward": 1.0,
    "_normalize_obs": false,
    "_normalize_reward": false,
    "_expected_action_scale": 1.0,
    "_flatten_obs": true,
    "_obs_alpha": 0.001,
    "_obs_mean": "array([0., 0., 0., 0.])",
    "_obs_var": "array([1., 1., 1., 1.])",
    "_reward_alpha": 0.001,
    "_reward_mean": 0.0,
    "_reward_var": 1.0,
    "$type": "garage.envs.normalized_env.NormalizedEnv"
  },
  "_sampler": {
    "_factory": {
      "n_workers": 2,
      "_seed": "None",
      "_max_episode_length": 500,
      "_worker_class": {
        "$typename": "garage.sampler.default_worker.DefaultWorker"
      },
      "_worker_args": {},
      "$type": "garage.sampler.worker_factory.WorkerFactory"
    },
    "_agents": [
      {
        "training": true,
        "_parameters": {},
        "_buffers": {},
        "_non_persistent_buffers_set": [],
        "_backward_hooks": {},
        "_forward_hooks": {},
        "_forward_pre_hooks": {},
        "_state_dict_hooks": {},
        "_load_state_dict_pre_hooks": {},
        "_modules": {
          "_module": {
            "training": true,
            "_parameters": {
              "_init_std": {
                "$type": "torch.nn.parameter.Parameter"
              }
            },
            "_buffers": {
              "min_std_param": {
                "$type": "torch.Tensor"
              }
            },
            "_non_persistent_buffers_set": [],
            "_backward_hooks": {},
            "_forward_hooks": {},
            "_forward_pre_hooks": {},
            "_state_dict_hooks": {},
            "_load_state_dict_pre_hooks": {},
            "_modules": {
              "_mean_module": {
                "training": true,
                "_parameters": {},
                "_buffers": {},
                "_non_persistent_buffers_set": [],
                "_backward_hooks": {},
                "_forward_hooks": {},
                "_forward_pre_hooks": {},
                "_state_dict_hooks": {},
                "_load_state_dict_pre_hooks": {},
                "_modules": {
                  "_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 4.0,
                            "out_features": 32,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x102a365b0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      },
                      "1": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 32,
                            "out_features": 32,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x102a365b0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  },
                  "_output_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 32,
                            "out_features": 2,
                            "$type": "torch.nn.modules.linear.Linear"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  }
                },
                "_output_dim": 2,
                "$type": "garage.torch.modules.mlp_module.MLPModule"
              }
            },
            "_input_dim": 4.0,
            "_hidden_sizes": [
              32,
              32
            ],
            "_action_dim": 2,
            "_learn_std": true,
            "_std_hidden_sizes": [
              32,
              32
            ],
            "_min_std": 1e-06,
            "_max_std": "None",
            "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
            "_std_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_std_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_std_output_nonlinearity": "None",
            "_std_output_w_init": {
              "$type": "builtins.function"
            },
            "_std_parameterization": "exp",
            "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
            "_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_output_nonlinearity": "None",
            "_output_w_init": {
              "$type": "builtins.function"
            },
            "_output_b_init": {
              "$type": "builtins.function"
            },
            "_layer_normalization": false,
            "_norm_dist_class": {
              "$typename": "torch.distributions.normal.Normal"
            },
            "_min_std_param": {
              "$type": "torch.Tensor"
            },
            "_max_std_param": "None",
            "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
          }
        },
        "_env_spec": {
          "max_episode_length": 500,
          "input_space": {
            "n": 2,
            "shape": [],
            "dtype": "dtype('int64')",
            "np_random": "RandomState(MT19937) at 0x7FE718F05490",
            "$type": "akro.discrete.Discrete"
          },
          "output_space": {
            "dtype": "dtype('float32')",
            "shape": [
              4
            ],
            "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
            "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
            "$type": "akro.box.Box"
          },
          "$type": "garage._environment.EnvSpec"
        },
        "_name": "GaussianMLPPolicy",
        "_obs_dim": 4.0,
        "_action_dim": 2,
        "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
      },
      {
        "training": true,
        "_parameters": {},
        "_buffers": {},
        "_non_persistent_buffers_set": [],
        "_backward_hooks": {},
        "_forward_hooks": {},
        "_forward_pre_hooks": {},
        "_state_dict_hooks": {},
        "_load_state_dict_pre_hooks": {},
        "_modules": {
          "_module": {
            "training": true,
            "_parameters": {
              "_init_std": {
                "$type": "torch.nn.parameter.Parameter"
              }
            },
            "_buffers": {
              "min_std_param": {
                "$type": "torch.Tensor"
              }
            },
            "_non_persistent_buffers_set": [],
            "_backward_hooks": {},
            "_forward_hooks": {},
            "_forward_pre_hooks": {},
            "_state_dict_hooks": {},
            "_load_state_dict_pre_hooks": {},
            "_modules": {
              "_mean_module": {
                "training": true,
                "_parameters": {},
                "_buffers": {},
                "_non_persistent_buffers_set": [],
                "_backward_hooks": {},
                "_forward_hooks": {},
                "_forward_pre_hooks": {},
                "_state_dict_hooks": {},
                "_load_state_dict_pre_hooks": {},
                "_modules": {
                  "_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 4.0,
                            "out_features": 32,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x102a365b0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      },
                      "1": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 32,
                            "out_features": 32,
                            "$type": "torch.nn.modules.linear.Linear"
                          },
                          "non_linearity": {
                            "training": true,
                            "_parameters": {},
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "module": "<built-in method tanh of type object at 0x102a365b0>",
                            "$type": "garage.torch._functions.NonLinearity"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  },
                  "_output_layers": {
                    "training": true,
                    "_parameters": {},
                    "_buffers": {},
                    "_non_persistent_buffers_set": [],
                    "_backward_hooks": {},
                    "_forward_hooks": {},
                    "_forward_pre_hooks": {},
                    "_state_dict_hooks": {},
                    "_load_state_dict_pre_hooks": {},
                    "_modules": {
                      "0": {
                        "training": true,
                        "_parameters": {},
                        "_buffers": {},
                        "_non_persistent_buffers_set": [],
                        "_backward_hooks": {},
                        "_forward_hooks": {},
                        "_forward_pre_hooks": {},
                        "_state_dict_hooks": {},
                        "_load_state_dict_pre_hooks": {},
                        "_modules": {
                          "linear": {
                            "training": true,
                            "_parameters": {
                              "weight": {
                                "$type": "torch.nn.parameter.Parameter"
                              },
                              "bias": {
                                "$type": "torch.nn.parameter.Parameter"
                              }
                            },
                            "_buffers": {},
                            "_non_persistent_buffers_set": [],
                            "_backward_hooks": {},
                            "_forward_hooks": {},
                            "_forward_pre_hooks": {},
                            "_state_dict_hooks": {},
                            "_load_state_dict_pre_hooks": {},
                            "_modules": {},
                            "in_features": 32,
                            "out_features": 2,
                            "$type": "torch.nn.modules.linear.Linear"
                          }
                        },
                        "$type": "torch.nn.modules.container.Sequential"
                      }
                    },
                    "$type": "torch.nn.modules.container.ModuleList"
                  }
                },
                "_output_dim": 2,
                "$type": "garage.torch.modules.mlp_module.MLPModule"
              }
            },
            "_input_dim": 4.0,
            "_hidden_sizes": [
              32,
              32
            ],
            "_action_dim": 2,
            "_learn_std": true,
            "_std_hidden_sizes": [
              32,
              32
            ],
            "_min_std": 1e-06,
            "_max_std": "None",
            "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
            "_std_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_std_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_std_output_nonlinearity": "None",
            "_std_output_w_init": {
              "$type": "builtins.function"
            },
            "_std_parameterization": "exp",
            "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
            "_hidden_w_init": {
              "$type": "builtins.function"
            },
            "_hidden_b_init": {
              "$type": "builtins.function"
            },
            "_output_nonlinearity": "None",
            "_output_w_init": {
              "$type": "builtins.function"
            },
            "_output_b_init": {
              "$type": "builtins.function"
            },
            "_layer_normalization": false,
            "_norm_dist_class": {
              "$typename": "torch.distributions.normal.Normal"
            },
            "_min_std_param": {
              "$type": "torch.Tensor"
            },
            "_max_std_param": "None",
            "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
          }
        },
        "_env_spec": {
          "max_episode_length": 500,
          "input_space": {
            "n": 2,
            "shape": [],
            "dtype": "dtype('int64')",
            "np_random": "RandomState(MT19937) at 0x7FE718F05490",
            "$type": "akro.discrete.Discrete"
          },
          "output_space": {
            "dtype": "dtype('float32')",
            "shape": [
              4
            ],
            "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
            "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
            "$type": "akro.box.Box"
          },
          "$type": "garage._environment.EnvSpec"
        },
        "_name": "GaussianMLPPolicy",
        "_obs_dim": 4.0,
        "_action_dim": 2,
        "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
      }
    ],
    "_envs": [
      {
        "_env": {
          "_env": {
            "env": {
              "gravity": 9.8,
              "masscart": 1.0,
              "masspole": 0.1,
              "total_mass": 1.1,
              "length": 0.5,
              "polemass_length": 0.05,
              "force_mag": 10.0,
              "tau": 0.02,
              "kinematics_integrator": "euler",
              "theta_threshold_radians": 0.20943951023931953,
              "x_threshold": 2.4,
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                "$type": "gym.spaces.box.Box"
              },
              "np_random": "RandomState(MT19937) at 0x7FE718F05E20",
              "viewer": "None",
              "state": "None",
              "steps_beyond_done": "None",
              "spec": {
                "id": "CartPole-v1",
                "entry_point": "gym.envs.classic_control:CartPoleEnv",
                "reward_threshold": 475.0,
                "nondeterministic": false,
                "max_episode_steps": 500,
                "_kwargs": {},
                "_env_name": "CartPole",
                "$type": "gym.envs.registration.EnvSpec"
              },
              "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
            },
            "action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
              "$type": "gym.spaces.discrete.Discrete"
            },
            "observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
              "$type": "gym.spaces.box.Box"
            },
            "reward_range": [
              -Infinity,
              Infinity
            ],
            "metadata": {
              "render.modes": [
                "human",
                "rgb_array"
              ],
              "video.frames_per_second": 50
            },
            "_max_episode_steps": 500,
            "_elapsed_steps": "None",
            "$type": "gym.wrappers.time_limit.TimeLimit"
          },
          "_max_episode_length": 500,
          "_render_modes": [
            "human",
            "rgb_array"
          ],
          "_step_cnt": "None",
          "_visualize": false,
          "_action_space": {
            "n": 2,
            "shape": [],
            "dtype": "dtype('int64')",
            "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
            "$type": "akro.discrete.Discrete"
          },
          "_observation_space": {
            "dtype": "dtype('float32')",
            "shape": [
              4
            ],
            "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
            "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
            "$type": "akro.box.Box"
          },
          "_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_env_info": "None",
          "$type": "garage.envs.gym_env.GymEnv"
        },
        "_scale_reward": 1.0,
        "_normalize_obs": false,
        "_normalize_reward": false,
        "_expected_action_scale": 1.0,
        "_flatten_obs": true,
        "_obs_alpha": 0.001,
        "_obs_mean": "array([0., 0., 0., 0.])",
        "_obs_var": "array([1., 1., 1., 1.])",
        "_reward_alpha": 0.001,
        "_reward_mean": 0.0,
        "_reward_var": 1.0,
        "$type": "garage.envs.normalized_env.NormalizedEnv"
      },
      {
        "_env": {
          "_env": {
            "env": {
              "gravity": 9.8,
              "masscart": 1.0,
              "masspole": 0.1,
              "total_mass": 1.1,
              "length": 0.5,
              "polemass_length": 0.05,
              "force_mag": 10.0,
              "tau": 0.02,
              "kinematics_integrator": "euler",
              "theta_threshold_radians": 0.20943951023931953,
              "x_threshold": 2.4,
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                "$type": "gym.spaces.box.Box"
              },
              "np_random": "RandomState(MT19937) at 0x7FE718FE3490",
              "viewer": "None",
              "state": "None",
              "steps_beyond_done": "None",
              "spec": {
                "id": "CartPole-v1",
                "entry_point": "gym.envs.classic_control:CartPoleEnv",
                "reward_threshold": 475.0,
                "nondeterministic": false,
                "max_episode_steps": 500,
                "_kwargs": {},
                "_env_name": "CartPole",
                "$type": "gym.envs.registration.EnvSpec"
              },
              "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
            },
            "action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
              "$type": "gym.spaces.discrete.Discrete"
            },
            "observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
              "$type": "gym.spaces.box.Box"
            },
            "reward_range": [
              -Infinity,
              Infinity
            ],
            "metadata": {
              "render.modes": [
                "human",
                "rgb_array"
              ],
              "video.frames_per_second": 50
            },
            "_max_episode_steps": 500,
            "_elapsed_steps": "None",
            "$type": "gym.wrappers.time_limit.TimeLimit"
          },
          "_max_episode_length": 500,
          "_render_modes": [
            "human",
            "rgb_array"
          ],
          "_step_cnt": "None",
          "_visualize": false,
          "_action_space": {
            "n": 2,
            "shape": [],
            "dtype": "dtype('int64')",
            "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
            "$type": "akro.discrete.Discrete"
          },
          "_observation_space": {
            "dtype": "dtype('float32')",
            "shape": [
              4
            ],
            "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
            "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
            "bounded_below": "array([ True,  True,  True,  True])",
            "bounded_above": "array([ True,  True,  True,  True])",
            "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
            "$type": "akro.box.Box"
          },
          "_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_env_info": "None",
          "$type": "garage.envs.gym_env.GymEnv"
        },
        "_scale_reward": 1.0,
        "_normalize_obs": false,
        "_normalize_reward": false,
        "_expected_action_scale": 1.0,
        "_flatten_obs": true,
        "_obs_alpha": 0.001,
        "_obs_mean": "array([0., 0., 0., 0.])",
        "_obs_var": "array([1., 1., 1., 1.])",
        "_reward_alpha": 0.001,
        "_reward_mean": 0.0,
        "_reward_var": 1.0,
        "$type": "garage.envs.normalized_env.NormalizedEnv"
      }
    ],
    "_workers": [
      {
        "_seed": "None",
        "_max_episode_length": 500,
        "_worker_number": 0,
        "agent": {
          "training": true,
          "_parameters": {},
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_module": {
              "training": true,
              "_parameters": {
                "_init_std": {
                  "$type": "torch.nn.parameter.Parameter"
                }
              },
              "_buffers": {
                "min_std_param": {
                  "$type": "torch.Tensor"
                }
              },
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_mean_module": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 4.0,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        },
                        "1": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    },
                    "_output_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 2,
                              "$type": "torch.nn.modules.linear.Linear"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    }
                  },
                  "_output_dim": 2,
                  "$type": "garage.torch.modules.mlp_module.MLPModule"
                }
              },
              "_input_dim": 4.0,
              "_hidden_sizes": [
                32,
                32
              ],
              "_action_dim": 2,
              "_learn_std": true,
              "_std_hidden_sizes": [
                32,
                32
              ],
              "_min_std": 1e-06,
              "_max_std": "None",
              "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_std_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_std_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_std_output_nonlinearity": "None",
              "_std_output_w_init": {
                "$type": "builtins.function"
              },
              "_std_parameterization": "exp",
              "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_output_nonlinearity": "None",
              "_output_w_init": {
                "$type": "builtins.function"
              },
              "_output_b_init": {
                "$type": "builtins.function"
              },
              "_layer_normalization": false,
              "_norm_dist_class": {
                "$typename": "torch.distributions.normal.Normal"
              },
              "_min_std_param": {
                "$type": "torch.Tensor"
              },
              "_max_std_param": "None",
              "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
            }
          },
          "_env_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718F05490",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_name": "GaussianMLPPolicy",
          "_obs_dim": 4.0,
          "_action_dim": 2,
          "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
        },
        "env": {
          "_env": {
            "_env": {
              "env": {
                "gravity": 9.8,
                "masscart": 1.0,
                "masspole": 0.1,
                "total_mass": 1.1,
                "length": 0.5,
                "polemass_length": 0.05,
                "force_mag": 10.0,
                "tau": 0.02,
                "kinematics_integrator": "euler",
                "theta_threshold_radians": 0.20943951023931953,
                "x_threshold": 2.4,
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                  "$type": "gym.spaces.box.Box"
                },
                "np_random": "RandomState(MT19937) at 0x7FE718F05E20",
                "viewer": "None",
                "state": "None",
                "steps_beyond_done": "None",
                "spec": {
                  "id": "CartPole-v1",
                  "entry_point": "gym.envs.classic_control:CartPoleEnv",
                  "reward_threshold": 475.0,
                  "nondeterministic": false,
                  "max_episode_steps": 500,
                  "_kwargs": {},
                  "_env_name": "CartPole",
                  "$type": "gym.envs.registration.EnvSpec"
                },
                "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
              },
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718F05C00",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718F05D10",
                "$type": "gym.spaces.box.Box"
              },
              "reward_range": [
                -Infinity,
                Infinity
              ],
              "metadata": {
                "render.modes": [
                  "human",
                  "rgb_array"
                ],
                "video.frames_per_second": 50
              },
              "_max_episode_steps": 500,
              "_elapsed_steps": "None",
              "$type": "gym.wrappers.time_limit.TimeLimit"
            },
            "_max_episode_length": 500,
            "_render_modes": [
              "human",
              "rgb_array"
            ],
            "_step_cnt": "None",
            "_visualize": false,
            "_action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
              "$type": "akro.discrete.Discrete"
            },
            "_observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3270",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3380",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_env_info": "None",
            "$type": "garage.envs.gym_env.GymEnv"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        },
        "_env_steps": [],
        "_observations": [],
        "_last_observations": [],
        "_agent_infos": {},
        "_lengths": [],
        "_prev_obs": "None",
        "_eps_length": 0,
        "_episode_infos": {},
        "$type": "garage.sampler.default_worker.DefaultWorker"
      },
      {
        "_seed": "None",
        "_max_episode_length": 500,
        "_worker_number": 1,
        "agent": {
          "training": true,
          "_parameters": {},
          "_buffers": {},
          "_non_persistent_buffers_set": [],
          "_backward_hooks": {},
          "_forward_hooks": {},
          "_forward_pre_hooks": {},
          "_state_dict_hooks": {},
          "_load_state_dict_pre_hooks": {},
          "_modules": {
            "_module": {
              "training": true,
              "_parameters": {
                "_init_std": {
                  "$type": "torch.nn.parameter.Parameter"
                }
              },
              "_buffers": {
                "min_std_param": {
                  "$type": "torch.Tensor"
                }
              },
              "_non_persistent_buffers_set": [],
              "_backward_hooks": {},
              "_forward_hooks": {},
              "_forward_pre_hooks": {},
              "_state_dict_hooks": {},
              "_load_state_dict_pre_hooks": {},
              "_modules": {
                "_mean_module": {
                  "training": true,
                  "_parameters": {},
                  "_buffers": {},
                  "_non_persistent_buffers_set": [],
                  "_backward_hooks": {},
                  "_forward_hooks": {},
                  "_forward_pre_hooks": {},
                  "_state_dict_hooks": {},
                  "_load_state_dict_pre_hooks": {},
                  "_modules": {
                    "_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 4.0,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        },
                        "1": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 32,
                              "$type": "torch.nn.modules.linear.Linear"
                            },
                            "non_linearity": {
                              "training": true,
                              "_parameters": {},
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "module": "<built-in method tanh of type object at 0x102a365b0>",
                              "$type": "garage.torch._functions.NonLinearity"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    },
                    "_output_layers": {
                      "training": true,
                      "_parameters": {},
                      "_buffers": {},
                      "_non_persistent_buffers_set": [],
                      "_backward_hooks": {},
                      "_forward_hooks": {},
                      "_forward_pre_hooks": {},
                      "_state_dict_hooks": {},
                      "_load_state_dict_pre_hooks": {},
                      "_modules": {
                        "0": {
                          "training": true,
                          "_parameters": {},
                          "_buffers": {},
                          "_non_persistent_buffers_set": [],
                          "_backward_hooks": {},
                          "_forward_hooks": {},
                          "_forward_pre_hooks": {},
                          "_state_dict_hooks": {},
                          "_load_state_dict_pre_hooks": {},
                          "_modules": {
                            "linear": {
                              "training": true,
                              "_parameters": {
                                "weight": {
                                  "$type": "torch.nn.parameter.Parameter"
                                },
                                "bias": {
                                  "$type": "torch.nn.parameter.Parameter"
                                }
                              },
                              "_buffers": {},
                              "_non_persistent_buffers_set": [],
                              "_backward_hooks": {},
                              "_forward_hooks": {},
                              "_forward_pre_hooks": {},
                              "_state_dict_hooks": {},
                              "_load_state_dict_pre_hooks": {},
                              "_modules": {},
                              "in_features": 32,
                              "out_features": 2,
                              "$type": "torch.nn.modules.linear.Linear"
                            }
                          },
                          "$type": "torch.nn.modules.container.Sequential"
                        }
                      },
                      "$type": "torch.nn.modules.container.ModuleList"
                    }
                  },
                  "_output_dim": 2,
                  "$type": "garage.torch.modules.mlp_module.MLPModule"
                }
              },
              "_input_dim": 4.0,
              "_hidden_sizes": [
                32,
                32
              ],
              "_action_dim": 2,
              "_learn_std": true,
              "_std_hidden_sizes": [
                32,
                32
              ],
              "_min_std": 1e-06,
              "_max_std": "None",
              "_std_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_std_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_std_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_std_output_nonlinearity": "None",
              "_std_output_w_init": {
                "$type": "builtins.function"
              },
              "_std_parameterization": "exp",
              "_hidden_nonlinearity": "<built-in method tanh of type object at 0x102a365b0>",
              "_hidden_w_init": {
                "$type": "builtins.function"
              },
              "_hidden_b_init": {
                "$type": "builtins.function"
              },
              "_output_nonlinearity": "None",
              "_output_w_init": {
                "$type": "builtins.function"
              },
              "_output_b_init": {
                "$type": "builtins.function"
              },
              "_layer_normalization": false,
              "_norm_dist_class": {
                "$typename": "torch.distributions.normal.Normal"
              },
              "_min_std_param": {
                "$type": "torch.Tensor"
              },
              "_max_std_param": "None",
              "$type": "garage.torch.modules.gaussian_mlp_module.GaussianMLPModule"
            }
          },
          "_env_spec": {
            "max_episode_length": 500,
            "input_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718F05490",
              "$type": "akro.discrete.Discrete"
            },
            "output_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718F055A0",
              "$type": "akro.box.Box"
            },
            "$type": "garage._environment.EnvSpec"
          },
          "_name": "GaussianMLPPolicy",
          "_obs_dim": 4.0,
          "_action_dim": 2,
          "$type": "garage.torch.policies.gaussian_mlp_policy.GaussianMLPPolicy"
        },
        "env": {
          "_env": {
            "_env": {
              "env": {
                "gravity": 9.8,
                "masscart": 1.0,
                "masspole": 0.1,
                "total_mass": 1.1,
                "length": 0.5,
                "polemass_length": 0.05,
                "force_mag": 10.0,
                "tau": 0.02,
                "kinematics_integrator": "euler",
                "theta_threshold_radians": 0.20943951023931953,
                "x_threshold": 2.4,
                "action_space": {
                  "n": 2,
                  "shape": [],
                  "dtype": "dtype('int64')",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                  "$type": "gym.spaces.discrete.Discrete"
                },
                "observation_space": {
                  "dtype": "dtype('float32')",
                  "shape": [
                    4
                  ],
                  "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                  "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                  "bounded_below": "array([ True,  True,  True,  True])",
                  "bounded_above": "array([ True,  True,  True,  True])",
                  "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                  "$type": "gym.spaces.box.Box"
                },
                "np_random": "RandomState(MT19937) at 0x7FE718FE3490",
                "viewer": "None",
                "state": "None",
                "steps_beyond_done": "None",
                "spec": {
                  "id": "CartPole-v1",
                  "entry_point": "gym.envs.classic_control:CartPoleEnv",
                  "reward_threshold": 475.0,
                  "nondeterministic": false,
                  "max_episode_steps": 500,
                  "_kwargs": {},
                  "_env_name": "CartPole",
                  "$type": "gym.envs.registration.EnvSpec"
                },
                "$type": "gym.envs.classic_control.cartpole.CartPoleEnv"
              },
              "action_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3160",
                "$type": "gym.spaces.discrete.Discrete"
              },
              "observation_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE3050",
                "$type": "gym.spaces.box.Box"
              },
              "reward_range": [
                -Infinity,
                Infinity
              ],
              "metadata": {
                "render.modes": [
                  "human",
                  "rgb_array"
                ],
                "video.frames_per_second": 50
              },
              "_max_episode_steps": 500,
              "_elapsed_steps": "None",
              "$type": "gym.wrappers.time_limit.TimeLimit"
            },
            "_max_episode_length": 500,
            "_render_modes": [
              "human",
              "rgb_array"
            ],
            "_step_cnt": "None",
            "_visualize": false,
            "_action_space": {
              "n": 2,
              "shape": [],
              "dtype": "dtype('int64')",
              "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
              "$type": "akro.discrete.Discrete"
            },
            "_observation_space": {
              "dtype": "dtype('float32')",
              "shape": [
                4
              ],
              "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
              "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
              "bounded_below": "array([ True,  True,  True,  True])",
              "bounded_above": "array([ True,  True,  True,  True])",
              "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
              "$type": "akro.box.Box"
            },
            "_spec": {
              "max_episode_length": 500,
              "input_space": {
                "n": 2,
                "shape": [],
                "dtype": "dtype('int64')",
                "np_random": "RandomState(MT19937) at 0x7FE718FE37C0",
                "$type": "akro.discrete.Discrete"
              },
              "output_space": {
                "dtype": "dtype('float32')",
                "shape": [
                  4
                ],
                "low": "array([-4.8000002e+00, -3.4028235e+38, -4.1887903e-01, -3.4028235e+38],\n      dtype=float32)",
                "high": "array([4.8000002e+00, 3.4028235e+38, 4.1887903e-01, 3.4028235e+38],\n      dtype=float32)",
                "bounded_below": "array([ True,  True,  True,  True])",
                "bounded_above": "array([ True,  True,  True,  True])",
                "np_random": "RandomState(MT19937) at 0x7FE718FE38D0",
                "$type": "akro.box.Box"
              },
              "$type": "garage._environment.EnvSpec"
            },
            "_env_info": "None",
            "$type": "garage.envs.gym_env.GymEnv"
          },
          "_scale_reward": 1.0,
          "_normalize_obs": false,
          "_normalize_reward": false,
          "_expected_action_scale": 1.0,
          "_flatten_obs": true,
          "_obs_alpha": 0.001,
          "_obs_mean": "array([0., 0., 0., 0.])",
          "_obs_var": "array([1., 1., 1., 1.])",
          "_reward_alpha": 0.001,
          "_reward_mean": 0.0,
          "_reward_var": 1.0,
          "$type": "garage.envs.normalized_env.NormalizedEnv"
        },
        "_env_steps": [],
        "_observations": [],
        "_last_observations": [],
        "_agent_infos": {},
        "_lengths": [],
        "_prev_obs": "None",
        "_eps_length": 0,
        "_episode_infos": {},
        "$type": "garage.sampler.default_worker.DefaultWorker"
      }
    ],
    "total_env_steps": 0,
    "$type": "garage.sampler.local_sampler.LocalSampler"
  },
  "_plotter": "None",
  "_start_time": "None",
  "_itr_start_time": "None",
  "step_itr": "None",
  "step_episode": "None",
  "enable_logging": true,
  "_n_workers": "None",
  "_worker_class": "None",
  "_worker_args": "None",
  "$type": "garage.trainer.Trainer"
}